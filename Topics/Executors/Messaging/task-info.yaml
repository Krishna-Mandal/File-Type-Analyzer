type: code
files:
- name: src/Main.kt
  visible: true
  text: |-
    import java.util.concurrent.ExecutorService
    import java.util.concurrent.Executors

    /* Do not change this class */
    data class Message(val from: String, val to: String, val text: String)

    /* Do not change this interface */
    interface AsyncMessageSender {
        fun sendMessages(messages: List<Message>)
        fun stop()
    }

    class AsyncMessageSenderImpl(val repeatFactor: Int) : AsyncMessageSender {
        val executor: ExecutorService = // TODO initialize the executor

        override fun sendMessages(messages: List<Message>) {
            for (msg in messages) {
                // TODO repeat messages
                executor.submit {
                    println("(${msg.from}>${msg.to}): ${msg.text}") // do not change it
                }
            }
        }

        override fun stop() {
            // TODO stop the executor and wait for it
        }
    }
  learner_created: false
feedback_link: https://hyperskill.org/learn/step/20102#comment
status: Solved
feedback:
  message: <html>Correct solution</html>
  time: Wed, 15 Jun 2022 21:23:08 UTC
record: -1
